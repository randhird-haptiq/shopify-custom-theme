<style>
  #section-{{ section.id }} {
    --background-color:{{ section.settings.header_background }};
  }
</style>
<section id="section-{{ section.id }}" class="custom-header">
  <div class="header-wrapper">
    <div class="hamburger">
      <button id="hamburger-btn">
        <img src="{{ 'menu.png' | asset_url }}" alt="Logo" height="36px" width="36px">
      </button>
    </div>

    <!-- Mobile Menu -->
    <div id="mobile-menu" class="mobile-menu">
      {% render 'mobile-menu' %}
      <div class="mobile-cancel-btn" id="mobile-cancel-btn">{% render 'icon-mobile-cancel' %}</div>

      <!-- Mobile Mega Menus -->
      {% render 'mobile-mega-menu' %}
    </div>

    {% render 'logo' %}

    <div class="header-links">
      <div class="header-upper">
        {% render 'search-bar' %}
        <div class="link-wrapper">
          <a href="{{ section.settings.customer_link }}">{{ section.settings.customer_support }}</a> |
          <a class="store-locator" href="{{ section.settings.store_locator_link }}">
            <img src="{{ 'pin.png' | asset_url }}" alt="Logo" height="17px" width="13px">
            {{- section.settings.store_locator -}}
          </a>
          <a href="/account"
            ><img
              src="{{ 'Contact.png' | asset_url }}"
              alt="Logo"
              height="20px"
              width="20px"
          ></a>
          <a href="/cart"><img src="{{ 'Shop.png' | asset_url }}" alt="Logo" height="22px" width="24px"></a>
        </div>
      </div>
      <div class="header-lower">
        <nav class="header-nav">
          <ul>
            {% for block in section.blocks %}
              {% if block.type == 'menu_item' %}
                <li>
                  <a href="{{ block.settings.link_url }}">{{ block.settings.link_name }}</a>
                  {% if block.settings.show_megamenu %}
                    <div class="mega-menu">
                      <div class="mega-menu-row">
                        {% for i in (1..3) %}
                          {% assign mega_menu_setting = 'mega_menu_' | append: i %}
                          {% assign menu = block.settings[mega_menu_setting] %}

                          {% if menu and menu.links.size > 0 %}
                            <div class="mega-menu-column">
                              <ul>
                                <li>
                                  <a href="" class="mega-menu-title">{{ menu.title }}</a>
                                </li>
                                {% for item in menu.links %}
                                  <li>
                                    <a href="{{ item.url }}" class="mega-menu-list">{{ item.title }}</a>
                                  </li>
                                {% endfor %}
                              </ul>
                            </div>
                          {% endif %}
                        {% endfor %}

                        {% if block.settings.suggestion1 and block.settings.image1 %}
                          <div class="suggest-img1 mega-menu-column">
                            <a href="{{ block.settings.sugest_url1 }}">
                              <img
                                src="{{ block.settings.image1 | img_url: 'medium' }}"
                                alt="Suggested Image 1"
                                height=""
                                width="90%"
                              >
                              <p>{{ block.settings.suggestion1 }}</p>
                            </a>
                          </div>
                        {% endif %}

                        {% if block.settings.suggestion2 and block.settings.image2 %}
                          <div class="suggest-img2 mega-menu-column">
                            <a href="{{ block.settings.sugest_url2 }}">
                              <img
                                src="{{ block.settings.image2 | img_url: 'medium' }}"
                                alt="Suggested Image 2"
                                height=""
                                width="90%"
                              >
                              <p>{{ block.settings.suggestion2 }}</p>
                            </a>
                          </div>
                        {% endif %}
                      </div>
                    </div>
                  {% endif %}
                </li>
              {% endif %}
            {% endfor %}
          </ul>
        </nav>
      </div>
    </div>
    <div class="search-cart">
      <button id="search-icon">
        <img src="{{ 'search-icon.png' | asset_url }}" alt="Logo" height="20px" width="20px">
      </button>
      <a href="/cart"><img src="{{ 'Shop.png' | asset_url }}" alt="Logo" height="20px" width="20px"></a>
    </div>
    <div id="mobile-search-bar">
      <div class="search-bar-wrapper">
        {% render 'search-bar' %}
        <button id="close-search">
          {% render 'icon-cancel' %}
        </button>
      </div>
    </div>
  </div>
</section>
<script>
  document.addEventListener('DOMContentLoaded', function () {
    const hamburgerBtn = document.getElementById('hamburger-btn');
    const mobileMenu = document.getElementById('mobile-menu');
    const mobileCancelBtn = document.getElementById('mobile-cancel-btn');
    const megaMenuTitles = document.querySelectorAll('.mobile-mega-menu-title');

    megaMenuTitles.forEach((title) => {
      title.addEventListener('click', function (event) {
        event.preventDefault();
        const menuList = this.closest('ul').querySelector('.mobile-mega-menu-list');
        const icon = this.querySelector('.mega-menu-icon');
        if (menuList) {
          menuList.classList.toggle('hidden');
          if (menuList.classList.contains('hidden')) {
            icon.innerHTML = `{% render 'icon-plus' %}`;
          } else {
            icon.innerHTML = `{% render 'icon-minus' %}`;
          }
        }
      });
    });

    hamburgerBtn.addEventListener('click', function () {
      mobileMenu.classList.toggle('active');
    });

    document.addEventListener('click', function (event) {
      if (!hamburgerBtn.contains(event.target) && !mobileMenu.contains(event.target)) {
        mobileMenu.classList.remove('active');
      }
    });

    if (mobileCancelBtn) {
      mobileCancelBtn.addEventListener('click', function () {
        mobileMenu.classList.remove('active');
      });
    }
    const mobileMegaMenuTriggers = document.querySelectorAll('.mobile-mega-menu-trigger');
    mobileMegaMenuTriggers.forEach((trigger) => {
      trigger.addEventListener('click', function (e) {
        e.preventDefault();
        const targetId = this.getAttribute('data-target');
        const targetMenu = document.getElementById(targetId);
        const title = this.getAttribute('data-title');
        const megaMenuHeader = targetMenu.querySelector('.mobile-mega-menu-header');
        const titleElement = megaMenuHeader.querySelector('.mega-menu-title');
        titleElement.textContent = title;
        document.querySelectorAll('.mobile-mega-menu').forEach((menu) => {
          if (menu.id !== targetId) {
            menu.classList.remove('active');
          }
        });
        targetMenu.classList.toggle('active');
      });
    });

    const mobileMegaMenuBackButtons = document.querySelectorAll('.mobile-mega-menu-back');
    mobileMegaMenuBackButtons.forEach((button) => {
      button.addEventListener('click', function () {
        const megaMenu = this.closest('.mobile-mega-menu');
        megaMenu.classList.remove('active');
      });
    });
  });
</script>

{% schema %}
{
  "name": "Header",
  "settings": [
    {
      "type": "color",
      "id": "header_background",
      "label": "Header Background Color",
      "default": "#ffffff"
    },
    {
      "type": "text",
      "id": "customer_support",
      "label": "Customer Support Link",
      "default": "Customer Support"
    },
    {
      "type": "url",
      "id": "customer_link",
      "label": "Customer Support Link"
    },
    {
      "type": "text",
      "id": "store_locator",
      "label": "Store Locacor Link",
      "default": "Store Locator"
    },
    {
      "type": "url",
      "id": "store_locator_link",
      "label": "Store Locator Link"
    }
  ],
  "max_blocks": 10,
  "blocks": [
    {
      "type": "logo",
      "name": "Logo",
      "limit": 1,
      "settings": [
        {
          "type": "image_picker",
          "id": "logo",
          "label": "Upload Logo"
        }
      ]
    },
    {
      "type": "menu_item",
      "name": "Navigation Item",
      "limit": 7,
      "settings": [
        {
          "type": "text",
          "id": "link_name",
          "label": "Link Name",
          "default": "New Link"
        },
        {
          "type": "url",
          "id": "link_url",
          "label": "Link URL"
        },
        {
          "type": "checkbox",
          "id": "show_megamenu",
          "label": "Show Mega Menu",
          "default": false
        },
        {
          "type": "link_list",
          "id": "mega_menu_1",
          "label": "Select Mega Menu 1"
        },
        {
          "type": "link_list",
          "id": "mega_menu_2",
          "label": "Select Mega Menu 2"
        },
        {
          "type": "link_list",
          "id": "mega_menu_3",
          "label": "Select Mega Menu 3"
        },
        {
          "type": "text",
          "id": "suggestion1",
          "label": "Add Suggestion text"
        },
        {
          "type": "url",
          "id": "sugest_url1",
          "label": "Link For Sugestion"
        },
        {
          "type": "image_picker",
          "id": "image1",
          "label": "Select Image to Show"
        },
        {
          "type": "text",
          "id": "suggestion2",
          "label": "Add Suggestion text",
          "default": "Cookie Cakes"
        },
        {
          "type": "url",
          "id": "sugest_url2",
          "label": "Link For Sugestion"
        },
        {
          "type": "image_picker",
          "id": "image2",
          "label": "Select Image to Show"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Custom Header"
    }
  ]
}
{% endschema %}
